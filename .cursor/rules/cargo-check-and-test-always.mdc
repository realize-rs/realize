---
description: Compile and test any code change.
globs: *.rs
alwaysApply: false
---
## Description

Cargo Check and Test Always Rule

## Name
cargo-check-and-test-always

## Description
Every time code is changed (test or production), always run `cargo check` and fix any errors or warnings, then run `cargo test -- --skip :slow:` and fix any errors or warnings. This must be done automatically, every time, without the user needing to ask.

## Rule

- **Trigger:** Any code change (test or production)
- **Actions:**
  1. After every code change, immediately run `cargo check`.
  2. If any errors or warnings are reported, fix them before proceeding.
  3. After `cargo check` passes cleanly, immediately run `cargo test -- --skip :slow:`.
  4. If any errors or warnings are reported by the test run, fix them before proceeding.
  5. Only consider the task complete when both commands pass with no errors or warnings.

## Rationale

This ensures that the codebase always compiles and passes tests after every change, maintaining a high standard of code quality and preventing regressions.

## Examples

✅ **Correct:**
- Make a code change → run `cargo check` (fix issues) → run `cargo test -- --skip :slow:` (fix issues) → done.

❌ **Incorrect:**
- Make a code change and do not run `cargo check` or `cargo test`.
- Make a code change, run `cargo check`, but do not run tests.
- Make a code change, run tests, but ignore warnings or errors.